package com.main.pkg;
//Question : Check if this exist or not  a pair[i,j] such that ar[j] - ar[i] && i!=j && k can be anything(negative)

public class TwoPointer {

	//Question : Find pair sum from distinct sorted array.
	public static void main(String[] args) {
		int arr[] = {3,7,8,11,14,19,20};
		int x = 25;
		System.out.println(pair(arr,x));
	}

	
	/*
	 * Edge case:
	 * ar[3]= {4, 10, 13} k = 0
	 *            p1   p2 //if p2++ then it is going out of bound  || p1++ then p1 = p2 this is not possible.
	 *            
	 *            
	 * ar[4]= {4, 10, 13,   13} k = 0           
	 *               p1/p2  p2     // p1 and p2 at index 2 this is not possible also forcefully we can't inc p2 so will p1 == p2 is equal then will do p2++ this is edge case.  
	 *          
	 *               
	 * ar[3]= {4, 10, 13} k = -3
	 *            p1  p2   //10-13 =-3 what if it is 13-10 = 3 then can be reverse it? YES that is negative val to positive value.
	 *              
	 */
	
	public static boolean Diff(int arr[], int k) {
		int n = arr.length;
		int i = 0, j = n-1;
		if(k < 0 ) {   //1st edge case (if k is negative but getting positive ans)
			k = k*-1;
		}
		while(i < j) {

			if(arr[i] + arr[j] == k) {   
				return true;
			}else if(arr[i] + arr[j] > k) { 
				j--;
				if(i == j) {   //2nd edge case (n-1 ie j element is going out of bound so j++)
					j++;
				}
			}else {
				i++;       
			}
		}
		return false;
	} 
	
	//SC = O(N)
	//TC = O(1)
}
