package com.dsa.pkg;

public class CarryForward {


	//1 N bulb problem  :

	public static void main(String[] args) {
		int arr[] = {1,0,0,1};
		switches(arr);

	}

	static int switches(int bulb[]){
		int c = 0 ;
		int N = 0;
		for(int i = 0 ; i< N;i++) {
			if(bulb[i] == 0 && c %2 == 0) {
				c++;
			}
			else if(bulb[i] == 1 && c%2 ==1) {
				c++;
			}
		}
		return c;
	}


	//2. find no. of leader that is max compare 1st:

	public static void main(String[] args) {
		int arr[] = {1,0,0,1};
		leader(arr);

	}

	static int leader(int arr[]) {
		int max = arr[0];
		int c = 1, n = 0;
		for(int i = 1;i<n;i++) {
			if(arr[i] > max) {
				max = arr[i];
				c++;
			}
		}
		return c;
	}


	//3. count of pairs : 

	public static void main(String[] args) {
		int arr[] = {'a','b','g','e','g'};
		countOfPairs(arr);

	}

	static int countOfPairs(int arr[]) {

		int c = 1, n = 0;
		for(int i = 1;i<n;i++) {
			for(int j = i +1;j < n;j++) {

				if(arr[i] == 'a' && arr[j] == 'g') {
					c++;
				}
			}
		}
		return c;
	}
}

