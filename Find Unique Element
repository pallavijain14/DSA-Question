Every Element occurs twice except for one, Find Unique Element.

Example : 
         0  1  2  3  4   5   6  7  8  9  10  11  12
arr[] = {2, 2, 8, 8, 12, 12, 7, 9, 9, 4, 4, 10, 10}


Psuedo Code : 
      1. If only one element in the array then return one.
      2. If first two element is not equal then return first Occurance.
      3. If last two element is not equal then return first last Occurance.
      4. Mid = (left + right)/2.
      5. Check mid element with mid's left and mid's right if not equal return mid.
      6. If mid index is equal to mid - 1 then mid - 1.
      7. Check if mid number is even then mid + 2.
      8. If not then mid - 1.

CODE:

package com.module2.pkg;

public class UniqueElement {

	public static void main(String[] args) {
		int arr[] = {3, 3, 1, 1, 8, 8, 10, 10, 19, 6, 6, 2, 2, 4, 4};
		System.out.println(uniqueElement(arr));	

	}

	public static int uniqueElement(int arr[]) {
		int n = arr.length;
		//if only one element then return the same.
		if(n == 1) {
			return arr[0];
		}
		//if first two element is not equal then return first element
		if(arr[0] != arr[1]) {
			return arr[0];
		}
		//if last two element is not equal then return first occurance of last element
		if(arr[n-1] != arr[n-2]) {
			return arr[n-1];
		}

		int l = 1;
		int r = n-2;

		while(l <= r) {
			//finding the mid
			int mid = (l + r)/2;

			//checking if mid is unique
			if(arr[mid]!= arr[mid-1] && arr[mid]!= arr[mid+1]) {
				return arr[mid];
			}
			//mid is odd then goto left
			if(arr[mid] == arr[mid-1]) {
				mid = mid - 1;
			}
			//if mid is even then goto left by 2 swift
			if(mid%2==0) {
				l = mid + 2;
			}else {
				//if mid is even then goto left by 2 swift
				r = mid - 1;
			}
		}
		return -1;
	}
}
